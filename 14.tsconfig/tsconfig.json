{
  "compilerOptions": {
    "rootDir": "./src", // 소스 파일 안에서 root폴더 명시
    "outDir": "./build/js", // ts 컴파일 후에 어느 경로로 들어가는지 명시
    "target": "ES2015", // 타입스크립트를 ES2015버전의 자바스크립트로 변환
    "noEmitOnError": false, // 파일에 에러가 있을 때에는 컴파일 하지 않는 옵션
    "module": "ESNext", // 컴파일을 마친 후 자바스크립트가 사용한은 모듈 시스템
    "esModuleInterop": true, // ESM(ES Module), CommonJS 호환해서 사용 가능
    "moduleResolution": "Node",
    "lib": ["ESNext", "DOM"], // 컴파일 과정에서 사용하는 라이브러리 지정
    "declaration": true, // d.ts파일 생성 타입들만 따로 관리할 수 있다.
    "baseUrl": "./", // tsconfig.json과 동일한 폴더에서 시작하는 파일을 먼저 찾는다
    "path": {
      // 임포트 경로 설정
      "@src/*": ["src/*"]
    },
    "isolatedModules": true, // 프로젝트 내 각 소스파일을 모듈로 만들기 강제
    "removeComments": true, // 컴파일시 타입스크립트 소스의 주석을 모두 제거
    "allowJs": true, // js파일과 ts파일을 같이 사용
    "checkJs": true, // js파일에서도 type check
    "strict": true, // 타입스크립트 파일에 타입을 엄격하게 사용한다고 명시
    "noImplicitAny": true, // 명시적이지 않은 any유형으로 표현식 및 선언 사용시 오류 발생
    "strictNullChecks": true, // 엄격한 null검사 사용
    "strictFunctionTypes": true, // 엄격한 함수 유형 검사 사용
    "strictBindCallApply": true, // 엄격한 bind, call, apply 함수 메서드 사용
    "strictPropertyInitialization": true, // 클래스에서 속성 초기화 엄격 검사 사용
    "noImplicitThis": true, // 명시적이지 않은 any유형으로 this표현식 사용시 오류발생
    "alwaysStrict": true // 엄격모드에서 구문 분석후, 각 소스파일에 "use strict"코드 출력
  },
  // 컴파일할 개별 파일 목록
  "files": [
    "node_modules/library/index.ts"
  ],
  // 컴파일러를 이용해서 변환할 폴더 경로를 지정
  "include": [
    "./src/**/*.ts"
  ],
  // 컴파일러를 이용해서 변환하지 않을 폴더 경로를 지정
  "exclude": [ 
      "node_modules",
      "dist"
  ],
  // 상속해서 사용할 다른 TS 구성파일 지정
  "extends": "main_config.json"
}